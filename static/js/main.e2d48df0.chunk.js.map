{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","components/Dropzone/index.tsx","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","Dropzone","upload","useState","selectedFileUrl","setSelectedFileUrl","onDrop","useCallback","acceptedFiles","file","fileUrl","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","style","padding","CreatePoint","items","setItems","selectedFile","setSelectedFile","ufs","setUfs","cities","setCities","name","email","whatsapp","formData","setFormData","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","initialPosition","setInitialPosition","history","useHistory","handleInputChange","event","target","value","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","onSubmit","preventDefault","items_ids","FormData","append","String","join","post","alert","push","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","idSelected","findIndex","idItem","filteredItems","filter","handleSelectedItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2d48df0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <img src={logo} alt=\"Ecoleta\"/>\r\n                </header>\r\n\r\n                <main>\r\n                    <h1>Seu marketplace de coleta de res√≠duos</h1>\r\n                    <p>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente</p>\r\n\r\n                    <Link to=\"/Ecoleta/create-point\">\r\n                        <span>\r\n                            <FiLogIn/>\r\n                        </span>\r\n                        <strong>Cadastre um ponto de coleta</strong>\r\n                    </Link>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://ecoleta-points-api.herokuapp.com/'\r\n});\r\nexport default api;","import React, {useCallback, useState} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { FiUpload } from 'react-icons/fi';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props { upload : (photo: File) => void }\r\n\r\nconst Dropzone : React.FC<Props> = ({upload}) => {\r\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    const file = acceptedFiles[0];\r\n    const fileUrl = URL.createObjectURL(file);\r\n    setSelectedFileUrl(fileUrl);\r\n    upload(file);\r\n  }, [upload])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n    onDrop,\r\n    accept: 'image/*'\r\n  })\r\n\r\n  return (\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} accept=\"image/*\" />\r\n      {\r\n        selectedFileUrl\r\n        ? <img src={selectedFileUrl}/>\r\n        : (\r\n          isDragActive\r\n            ? <p style={{padding:20}}>\r\n                <FiUpload/>\r\n                Solte a foto do estabelecimento aqui ...\r\n              </p>\r\n            : <p style={{padding:20}}>\r\n                <FiUpload/>\r\n                Arraste aqui, ou clique para enviar a foto do estabelecimento\r\n              </p>\r\n        )\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Dropzone;","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport axios from 'axios';\r\nimport api from '../../services/api';\r\nimport Dropzone from '../../components/Dropzone';\r\n\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item { id : number, title : string, image_url : string };\r\n\r\ninterface IBGEResponse { sigla : string, nome : string };\r\n\r\nconst CreatePoint = () => {\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [selectedFile, setSelectedFile] = useState<File>();\r\n    \r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [cities, setCities] = useState<string[]>([]);\r\n\r\n    const [formData, setFormData] = useState({\r\n       name: '',\r\n       email: '',\r\n       whatsapp: '', \r\n    });\r\n\r\n    const [selectedUf, setSelectedUf] = useState('0');\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0]);\r\n    \r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0]);\r\n\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords;\r\n            setInitialPosition( [latitude, longitude] );\r\n        })\r\n    },[]);\r\n\r\n    useEffect(() => {   \r\n        api.get('items').then( response => {\r\n            setItems(response.data);\r\n        });\r\n    }, []);\r\n    \r\n    useEffect(() => {   \r\n        axios.get<IBGEResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then( response => {\r\n            const ufInitials : string[] = response.data.map(uf => uf.sigla);\r\n            setUfs(ufInitials);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(selectedUf === '0'){return}\r\n        axios.get<IBGEResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n            .then(response => {\r\n                const cityNames : string[] = response.data.map(city => city.nome);\r\n                setCities(cityNames);\r\n            })\r\n    }, [selectedUf]);\r\n\r\n    function handleSelectUf(event : ChangeEvent<HTMLSelectElement>) {\r\n        const uf : string = event.target.value;\r\n        setSelectedUf(uf);\r\n    };\r\n\r\n    function handleSelectCity(event : ChangeEvent<HTMLSelectElement>) {\r\n        const city : string = event.target.value;\r\n        setSelectedCity(city);\r\n    };\r\n\r\n    function handleMapClick(event : LeafletMouseEvent) {\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng\r\n        ]);\r\n    };\r\n\r\n    function handleInputChange(event : ChangeEvent<HTMLInputElement>) {\r\n        //event.target possui o parametro 'name' e 'value' de um input\r\n        const { name, value } = event.target; \r\n        //passando [name] entre [] ele substitui o nome da propriedade no objeto js pelo valor da variavel\r\n        setFormData({...formData, [name]: value}); \r\n    }\r\n\r\n    function handleSelectedItem(idSelected : number){\r\n        const alreadySelectedIndex : number = selectedItems.findIndex(idItem => idItem === idSelected);\r\n\r\n        if(alreadySelectedIndex >= 0){\r\n            const filteredItems : number[] = selectedItems.filter(idItem => idItem !== idSelected);\r\n            setSelectedItems(filteredItems);\r\n        } else {\r\n            setSelectedItems([...selectedItems, idSelected]);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp } = formData;\r\n        const uf : string = selectedUf;\r\n        const city : string = selectedCity;\r\n        const [latitude, longitude] = selectedPosition;\r\n        const items_ids : number[] = selectedItems;\r\n        const data = new FormData(); \r\n        data.append('name' , name);\r\n        data.append('email' , email);\r\n        data.append('whatsapp' , whatsapp);\r\n        data.append('uf' , uf);\r\n        data.append('city' , city);\r\n        data.append('latitude' , String(latitude));\r\n        data.append('longitude' , String(longitude));\r\n        data.append('items_ids' , items_ids.join(','));\r\n        \r\n        if(selectedFile){\r\n            data.append('image', selectedFile)\r\n        }\r\n\r\n        api.post('points', data);\r\n        alert('Ponto de coleta registrado');\r\n\r\n        history.push('/'); //manda o usu√°rio de volta pra home\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\"/>\r\n\r\n                <Link to=\"/Ecoleta\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n            </header>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>\r\n                    Cadastro <br />\r\n                    pontos de coleta.\r\n                </h1>\r\n\r\n                <Dropzone upload={setSelectedFile}/>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Dados</h2>\r\n                    </legend>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade: </label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <div className=\"field-group row\">\r\n                        <div className=\"field col-12 col-md-6\">\r\n                            <label htmlFor=\"email\">E-mail: </label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"field col-12 col-md-6\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp: </label>\r\n                            <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                \r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endere√ßo</h2>\r\n                        <span>Selecione o endere√ßo no mapa</span>\r\n                    </legend>\r\n\r\n                    <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={selectedPosition} />\r\n                    </Map>\r\n\r\n                    <div className=\"field-group row\">\r\n                        <div className=\"field col-12 col-md-6\">\r\n                            <label htmlFor=\"uf\">Estado: </label>\r\n                            <select \r\n                              name=\"uf\"\r\n                              id=\"uf\"\r\n                              value={selectedUf}\r\n                              onChange={handleSelectUf}\r\n                            >\r\n                                <option value=\"0\"> Selectione um UF</option>\r\n                                {ufs.map( uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field col-12 col-md-6\">\r\n                            <label htmlFor=\"city\">Cidade: </label>\r\n                            <select \r\n                              name=\"city\"\r\n                              id=\"city\" \r\n                              value={selectedCity}\r\n                              onChange={handleSelectCity}\r\n                            >\r\n                                <option value=\"0\"> Selectione um cidade</option>\r\n                                {cities.map( city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                \r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>√¨tens de coleta</h2>\r\n                    </legend>\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                                                        //Para passar parametro em fun√ß√£o no html\r\n                                                        //usa-se fun√ß√£o anonima pra que ela n√£o seja executada\r\n                                                        //assim que carrega a p√°gina\r\n                            <li \r\n                              key={item.id} \r\n                              onClick={() => handleSelectedItem(item.id)}\r\n                                        //checa se o array de itens selecionados possui o id desse item dentro\r\n                              className={selectedItems.includes(item.id) ? 'selected' : ''} \r\n                            > \r\n                                <img src={item.image_url} alt={item.title}/>\r\n                                <span>{item.title}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </fieldset>\r\n                \r\n                <button>Cadastrar ponto de coleta</button>\r\n            </form>\r\n        </div>\r\n)}\r\nexport default CreatePoint;","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport CreatePoint from './pages/CreatePoint';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter >\r\n            <Route component={Home} path=\"/Ecoleta\" exact/>\r\n            <Route component={CreatePoint} path=\"/Ecoleta/create-point\" />\r\n        </BrowserRouter>\r\n    )\r\n};\r\nexport default Routes;","import React from 'react';\nimport Routes from './routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}