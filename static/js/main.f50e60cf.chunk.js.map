{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","components/Dropzone/index.tsx","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","Dropzone","upload","useState","selectedFileUrl","setSelectedFileUrl","onDrop","useCallback","acceptedFiles","file","fileUrl","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","style","padding","CreatePoint","items","setItems","selectedFile","setSelectedFile","ufs","setUfs","cities","setCities","name","email","whatsapp","formData","setFormData","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","initialPosition","setInitialPosition","history","useHistory","handleInputChange","event","target","value","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","onSubmit","preventDefault","items_ids","FormData","append","String","join","post","alert","push","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","idSelected","findIndex","idItem","filteredItems","filter","handleSelectedItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f50e60cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9a97c04b.svg\";","import React from 'react';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport './styles.css';\nimport logo from '../../assets/logo.svg';\n\nconst Home = () => {\n    return (\n        <div id=\"page-home\">\n            <div className=\"content\">\n                <header>\n                    <img src={logo} alt=\"Ecoleta\"/>\n                </header>\n\n                <main>\n                    <h1>Seu marketplace de coleta de res√≠duos</h1>\n                    <p>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente</p>\n\n                    <Link to=\"/Ecoleta/create-point\">\n                        <span>\n                            <FiLogIn/>\n                        </span>\n                        <strong>Cadastre um ponto de coleta</strong>\n                    </Link>\n                </main>\n            </div>\n        </div>\n    )\n};\nexport default Home;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://ecoleta-points-api.herokuapp.com/'\n});\nexport default api;","import React, {useCallback, useState} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { FiUpload } from 'react-icons/fi';\n\nimport './styles.css';\n\ninterface Props { upload : (photo: File) => void }\n\nconst Dropzone : React.FC<Props> = ({upload}) => {\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const fileUrl = URL.createObjectURL(file);\n    setSelectedFileUrl(fileUrl);\n    upload(file);\n  }, [upload])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  })\n\n  return (\n    <div className=\"dropzone\" {...getRootProps()}>\n      <input {...getInputProps()} accept=\"image/*\" />\n      {\n        selectedFileUrl\n        ? <img src={selectedFileUrl}/>\n        : (\n          isDragActive\n            ? <p style={{padding:20}}>\n                <FiUpload/>\n                Solte a foto do estabelecimento aqui ...\n              </p>\n            : <p style={{padding:20}}>\n                <FiUpload/>\n                Arraste aqui, ou clique para enviar a foto do estabelecimento\n              </p>\n        )\n      }\n      \n    </div>\n  )\n}\nexport default Dropzone;","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi'\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport { LeafletMouseEvent } from 'leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport Dropzone from '../../components/Dropzone';\n\nimport './styles.css';\nimport logo from '../../assets/logo.svg';\n\ninterface Item { id : number, title : string, image_url : string };\n\ninterface IBGEResponse { sigla : string, nome : string };\n\nconst CreatePoint = () => {\n    const [items, setItems] = useState<Item[]>([]);\n    const [selectedFile, setSelectedFile] = useState<File>();\n    \n    const [ufs, setUfs] = useState<string[]>([]);\n    const [cities, setCities] = useState<string[]>([]);\n\n    const [formData, setFormData] = useState({\n       name: '',\n       email: '',\n       whatsapp: '', \n    });\n\n    const [selectedUf, setSelectedUf] = useState('0');\n    const [selectedCity, setSelectedCity] = useState('0');\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0]);\n    \n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0]);\n\n    const history = useHistory();\n    \n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n            const { latitude, longitude } = position.coords;\n            setInitialPosition( [latitude, longitude] );\n        })\n    },[]);\n\n    useEffect(() => {   \n        api.get('items').then( response => {\n            setItems(response.data);\n        });\n    }, []);\n    \n    useEffect(() => {   \n        axios.get<IBGEResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then( response => {\n            const ufInitials : string[] = response.data.map(uf => uf.sigla);\n            setUfs(ufInitials);\n        });\n    }, []);\n\n    useEffect(() => {\n        if(selectedUf === '0'){return}\n        axios.get<IBGEResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n            .then(response => {\n                const cityNames : string[] = response.data.map(city => city.nome);\n                setCities(cityNames);\n            })\n    }, [selectedUf]);\n\n    function handleSelectUf(event : ChangeEvent<HTMLSelectElement>) {\n        const uf : string = event.target.value;\n        setSelectedUf(uf);\n    };\n\n    function handleSelectCity(event : ChangeEvent<HTMLSelectElement>) {\n        const city : string = event.target.value;\n        setSelectedCity(city);\n    };\n\n    function handleMapClick(event : LeafletMouseEvent) {\n        setSelectedPosition([\n            event.latlng.lat,\n            event.latlng.lng\n        ]);\n    };\n\n    function handleInputChange(event : ChangeEvent<HTMLInputElement>) {\n        //event.target possui o parametro 'name' e 'value' de um input\n        const { name, value } = event.target; \n        //passando [name] entre [] ele substitui o nome da propriedade no objeto js pelo valor da variavel\n        setFormData({...formData, [name]: value}); \n    }\n\n    function handleSelectedItem(idSelected : number){\n        const alreadySelectedIndex : number = selectedItems.findIndex(idItem => idItem === idSelected);\n\n        if(alreadySelectedIndex >= 0){\n            const filteredItems : number[] = selectedItems.filter(idItem => idItem !== idSelected);\n            setSelectedItems(filteredItems);\n        } else {\n            setSelectedItems([...selectedItems, idSelected]);\n        }\n    }\n\n    function handleSubmit(event: FormEvent) {\n        event.preventDefault();\n\n        const { name, email, whatsapp } = formData;\n        const uf : string = selectedUf;\n        const city : string = selectedCity;\n        const [latitude, longitude] = selectedPosition;\n        const items_ids : number[] = selectedItems;\n        const data = new FormData(); \n        data.append('name' , name);\n        data.append('email' , email);\n        data.append('whatsapp' , whatsapp);\n        data.append('uf' , uf);\n        data.append('city' , city);\n        data.append('latitude' , String(latitude));\n        data.append('longitude' , String(longitude));\n        data.append('items_ids' , items_ids.join(','));\n        \n        if(selectedFile){\n            data.append('image', selectedFile)\n        }\n\n        api.post('points', data);\n        alert('Ponto de coleta registrado');\n\n        history.push('/Ecoleta'); //manda o usu√°rio de volta pra home\n    }\n\n    return (\n        <div id=\"page-create-point\">\n            <header>\n                <img src={logo} alt=\"Ecoleta\"/>\n\n                <Link to=\"/Ecoleta\">\n                    <FiArrowLeft />\n                    Voltar para home\n                </Link>\n            </header>\n\n            <form onSubmit={handleSubmit}>\n                <h1>\n                    Cadastro <br />\n                    pontos de coleta.\n                </h1>\n\n                <Dropzone upload={setSelectedFile}/>\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade: </label>\n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange} />\n                    </div>\n\n                    <div className=\"field-group row\">\n                        <div className=\"field col-12 col-md-6\">\n                            <label htmlFor=\"email\">E-mail: </label>\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChange} />\n                        </div>\n                        <div className=\"field col-12 col-md-6\">\n                            <label htmlFor=\"whatsapp\">Whatsapp: </label>\n                            <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange} />\n                        </div>\n                    </div>\n                </fieldset>\n                \n                <fieldset>\n                    <legend>\n                        <h2>Endere√ßo</h2>\n                        <span>Selecione o endere√ßo no mapa</span>\n                    </legend>\n\n                    <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\n                        <TileLayer\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker position={selectedPosition} />\n                    </Map>\n\n                    <div className=\"field-group row\">\n                        <div className=\"field col-12 col-md-6\">\n                            <label htmlFor=\"uf\">Estado: </label>\n                            <select \n                              name=\"uf\"\n                              id=\"uf\"\n                              value={selectedUf}\n                              onChange={handleSelectUf}\n                            >\n                                <option value=\"0\"> Selectione um UF</option>\n                                {ufs.map( uf => (\n                                    <option key={uf} value={uf}>{uf}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-12 col-md-6\">\n                            <label htmlFor=\"city\">Cidade: </label>\n                            <select \n                              name=\"city\"\n                              id=\"city\" \n                              value={selectedCity}\n                              onChange={handleSelectCity}\n                            >\n                                <option value=\"0\"> Selectione um cidade</option>\n                                {cities.map( city => (\n                                    <option key={city} value={city}>{city}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </fieldset>\n                \n                <fieldset>\n                    <legend>\n                        <h2>√¨tens de coleta</h2>\n                    </legend>\n                    <ul className=\"items-grid\">\n                        {items.map(item => (\n                                                        //Para passar parametro em fun√ß√£o no html\n                                                        //usa-se fun√ß√£o anonima pra que ela n√£o seja executada\n                                                        //assim que carrega a p√°gina\n                            <li \n                              key={item.id} \n                              onClick={() => handleSelectedItem(item.id)}\n                                        //checa se o array de itens selecionados possui o id desse item dentro\n                              className={selectedItems.includes(item.id) ? 'selected' : ''} \n                            > \n                                <img src={item.image_url} alt={item.title}/>\n                                <span>{item.title}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </fieldset>\n                \n                <button>Cadastrar ponto de coleta</button>\n            </form>\n        </div>\n)}\nexport default CreatePoint;","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport CreatePoint from './pages/CreatePoint';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter >\n            <Route component={Home} path=\"/Ecoleta\" exact/>\n            <Route component={CreatePoint} path=\"/Ecoleta/create-point\" />\n        </BrowserRouter>\n    )\n};\nexport default Routes;","import React from 'react';\nimport Routes from './routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}